server {
    listen   80;
    server_name  .<%= node[:app][:host] %>;
    access_log  <%= node[:nginx][:log_dir] %>/<%= node[:app][:host] %>.access.log;

    proxy_set_header Host $host;
    real_ip_header X-Forwarded-For;
    set_real_ip_from 10.0.0.0/8;

<% node[:nginx][:custom_block_ips].each do |ip| %>
    deny <%= ip %>;
<% end %>

    location /static/ {
        alias <%= "#{node[:app][:directory]}/#{node[:app][:host]}/#{node[:app][:name]}/static/" %>;
        autoindex off;
    }

    location / {
<% if node[:nginx][:basic_auth_entries].length > 0 %>
        auth_basic "<%= node[:nginx][:basic_auth_realm] %>";
        auth_basic_user_file <%= node[:nginx][:basic_auth_file] %>;
<% end %>
        # defining a new header in other locations result in resetting all previously defined headers.
        # so the Host header needs to be redefined here.
        # See https://gist.github.com/thoop/8165802#comment-1375035
        proxy_set_header Host $host;


        #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
        resolver 8.8.8.8;
        proxy_pass http://127.0.0.1:8000;
    }

    # Block all svn access
    if ($request_uri ~* ^.*\.svn.*$) {
        return 404;
    }

    # Block all git access
    if ($request_uri ~* ^.*\.git.*$) {
        return 404;
    }

    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}

# block requests without valid domain.
server {
    listen 80 default_server;
    return 404;
}
